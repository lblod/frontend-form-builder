@prefix form: <http://lblod.data.gift/vocabularies/forms/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix mu: <http://mu.semte.ch/vocabularies/core/> .
@prefix displayTypes: <http://lblod.data.gift/display-types/> .
@prefix ext: <http://mu.semte.ch/vocabularies/ext/> .
@prefix schema: <http://schema.org/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix nie: <http://www.semanticdesktop.org/ontologies/2007/01/19/nie#> .
@prefix fieldGroups: <http://data.lblod.info/field-groups/> .
@prefix fields: <http://data.lblod.info/fields/> .
@prefix concept: <http://lblod.data.gift/concept-schemes/> .

##########################################################
# Form
##########################################################
ext:form a form:Form, form:TopLevelForm ;
  form:includes ext:formNodesL .

##########################################################
#  Property-groups
##########################################################
ext:formFieldPg a form:PropertyGroup;
  sh:name "" ;
  sh:order 1 .

##########################################################
#  Scopes
##########################################################
ext:formNodesS a form:Scope ;
  sh:path form:includes .

ext:formValidationsS a form:Scope ;
  sh:path form:validations .

##########################################################
#  Field with add validation button
##########################################################
ext:formNodesFormItem a form:SubForm ;
  form:includes ext:formNodesNameF ;
  form:hasFieldGroup ext:formFieldPg .

ext:formNodesNameF a form:Field ;
  sh:name "Field name" ;
  sh:order 1 ;
  sh:path sh:name ;
  form:displayType displayTypes:defaultInput ;
  sh:group ext:formFieldPg .

ext:formNodesL a form:Listing ;
  form:each ext:formValidationItem ;
  form:scope ext:formNodesS ;
  sh:group ext:formFieldPg ;
  sh:order 3 .

##########################################################
#  Field with optional validations
##########################################################
ext:formValidationItem a form:SubForm;
  form:includes ext:formValidationL .

##########################################################
# Field validations
##########################################################
ext:formValidationL a form:Listing ;
  form:each ext:formValidationValueItem ;
  form:scope ext:formValidationsS ;
  form:canAdd true ;
  form:addLabel "Validation" ;
  form:canRemove true ;
  form:removeLabel "Remove section" ;
  form:createGenerator ext:addValidationGenerator ;
  sh:group ext:formFieldPg ;
  sh:order 3 .

ext:formValidationValueItem a form:SubForm ;
  form:hasFieldGroup ext:validationsFG ;
  form:includes ext:validationResultMessageF .

ext:validationsFG a form:FieldGroup ;
  form:hasField fields:validatonSelectorF .

##########################################################
#  Validation type selector
##########################################################
fields:validatonSelectorF a form:Field ;
  sh:name "Validation type" ;
  sh:order 2 ;
  sh:path rdf:type ;
  form:help """
   """;
  form:validations 
    [ a form:RequiredConstraint ;
        form:grouping form:Bag ;
        sh:path rdf:type ;
        sh:resultMessage "Dit veld is verplicht."@nl
    ] ;
  form:displayType displayTypes:validationConceptSchemeSelector ;
  form:options """{"conceptScheme":"http://lblod.data.gift/concept-schemes/possibleValidations","searchEnabled":true}""" ;
  sh:group ext:formFieldPg ;
  form:hasConditionalFieldGroup fields:maxLengthValidationCFG .

##########################################################
#  Validation generator
##########################################################
ext:addValidationGenerator a form:Generator ;
  form:prototype [
    form:shape [
      form:grouping "Bag"@en
    ]
  ] .

##########################################################
#  Field Groups per validation type
##########################################################
fieldGroups:maxLengthValidationFG a form:FieldGroup ;
  form:hasField ext:validationMaxLengthF .

##########################################################
#  Validation type conditions
##########################################################
fields:maxLengthValidationCFG a form:ConditionalFieldGroup ;
  form:conditions
    [ a form:SingleCodelistValue ;
        form:grouping form:Bag ;
        sh:path rdf:type ;
        form:conceptScheme concept:possibleValidations ;
        form:customValue form:MaxLength
    ] ;
  form:hasFieldGroup fieldGroups:maxLengthValidationFG .

##########################################################
#  All separate fields
##########################################################
    ##########################################################
    #  Error message field
    ##########################################################
    ext:validationResultMessageF a form:Field ;
      sh:name "Error message" ;
      sh:order 100 ; # I think we always want to show this below the conditional fields?
      sh:path sh:resultMessage ;
      form:displayType displayTypes:defaultInput ;
      sh:group ext:formFieldPg .

    ##########################################################
    #  Max-lenght field
    ##########################################################
    ext:validationMaxLengthF a form:Field ;
      sh:name "Max characters" ;
      sh:order 101 ;
      sh:path form:max ;
      form:validations 
        [ a form:RequiredConstraint ;
            form:grouping form:Bag ;
            sh:path form:max ;
            sh:resultMessage "Dit veld is verplicht."@nl
        ] ;
      form:displayType displayTypes:defaultInput ;
      sh:group ext:formFieldPg .
