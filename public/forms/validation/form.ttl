@prefix form: <http://lblod.data.gift/vocabularies/forms/> .
@prefix sh: <http://www.w3.org/ns/shacl#>.
@prefix mu: <http://mu.semte.ch/vocabularies/core/> .
@prefix displayTypes: <http://lblod.data.gift/display-types/> .
@prefix ext: <http://mu.semte.ch/vocabularies/ext/> .
@prefix schema: <http://schema.org/>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix nie: <http://www.semanticdesktop.org/ontologies/2007/01/19/nie#>.

##########################################################
# form
##########################################################
ext:form a form:Form, form:TopLevelForm ;
  form:includes ext:propertyGroupL;
  form:includes ext:formNodesL;
  form:includes ext:formListingL;
  form:includes ext:formListingTableL.

##########################################################
#  property-group
##########################################################
ext:mainPg a form:PropertyGroup;
    sh:name "Form Builder" ;
    sh:order 0 .

ext:formFieldPg a form:PropertyGroup;
    sh:name "Field" ;
    sh:order 1 .

##########################################################
#  PropertyGroup Scope
#  TODO: allow finding triples for a "form:Scope"
#    with no "sh:path" provided.
#    We now revert to attaching the propertyGroups to
#    the "form:Form" directly.
#    Which is suboptimal, cause not really in the defined
#    model. (It's not forbidden though)
##########################################################
ext:propertyGroupS a form:Scope;
  sh:path sh:group ;
  form:constraint [
     a sh:NodeShape ;
     sh:targetNode form:PropertyGroup
  ].

##########################################################
#  PropertyGroup Listing
##########################################################
ext:propertyGroupL a form:Listing;
  # form:each ext:propertyGroupItem;
  form:scope ext:propertyGroupS;
  form:createGenerator ext:propertyGroupGenerator;
  form:canAdd false;
  form:canRemove false;
  sh:group ext:mainPg;
  sh:order 1 .

##########################################################
#  Generator: propertyGroup
##########################################################
ext:propertyGroupGenerator a form:Generator;
  form:prototype [
    form:shape [
      a form:PropertyGroup ;
      sh:name "Title"
    ]
  ].

##########################################################
#  Subform: propertyGroup
##########################################################
ext:propertyGroupItem a form:SubForm;
  form:hasFieldGroup ext:propertyGroupPg.

##########################################################
#  listing-scope:
##########################################################
ext:formNodesS a form:Scope;
  sh:path form:includes.

ext:formNodesL a form:Listing;
  form:each ext:formNodesFormItem;
  form:scope ext:formNodesS;
  form:createGenerator ext:formNodesGenerator;
  form:canAdd false;
  form:canAdd false;
  form:canRemove false;
  sh:group ext:mainPg;
  sh:order 2 .

##########################################################
#  Subform: formNodesFormItem
##########################################################
ext:formNodesFormItem a form:SubForm;
  form:includes ext:formNodesNameF;
  form:includes ext:conceptSchemeMultiSelectorField;
  form:hasFieldGroup ext:formFieldPg.

ext:formNodesNameF a form:Field ;
  sh:name "Field name" ;
  sh:order 1 ;
  sh:path sh:name ;
  form:displayType displayTypes:defaultInput;
  sh:group ext:formFieldPg .

##########################################################
#  Validations multi selector:
##########################################################
ext:conceptSchemeMultiSelectorField a form:Field;
  sh:name "Add validations" ;
  sh:order 7;
  form:help """
    e.g. Required, Max Length...
   """;
  sh:path form:validations ;
  form:displayType displayTypes:conceptSchemeValidationMultiSelector ;
  form:options """{"conceptScheme":"http://lblod.data.gift/concept-schemes/dde3d2a3-e848-47ea-ba44-0f2e565f04ab","searchEnabled":true}""" ;
  sh:group ext:formFieldPg .

ext:formFieldPg form:hasField ext:conceptSchemeMultiSelectorField .

##########################################################
#  Generator: formNodesForm
##########################################################
ext:formNodesGenerator a form:Generator;
  form:prototype [
    form:shape [
      a form:Field ;
      sh:name "Field name";
      sh:path [];
      form:displayType displayTypes:defaultInput
    ]
  ].

##########################################################
#  listing-scope:
##########################################################
ext:formListingS a form:Scope;
  sh:path form:includes;
  form:constraint [
     a sh:NodeShape ;
     sh:property [
       sh:path rdf:type ;
       sh:targetNode form:Listing
     ];
  ].

##########################################################
#  listing: formListingL
##########################################################
ext:formListingL a form:Listing;
  form:each ext:formListingFormItem;
  form:scope ext:formListingS;
  form:createGenerator ext:formListingGenerator;
  form:canAdd false;
  form:canRemove false;
  sh:group ext:mainPg;
  sh:order 3 .

##########################################################
#  listing: formListingL (as table)
##########################################################
ext:formListingTableL a form:Listing;
  form:each ext:formListingFormItem;
  form:scope ext:formListingS;
  form:createGenerator ext:formListingTableGenerator;
  form:canAdd false;
  form:canRemove false;
  sh:group ext:mainPg;
  sh:order 4 .

##########################################################
#  listing-scope:
##########################################################
ext:subformNodesLS a form:Scope;
  sh:path ( form:each form:includes ).

ext:subformNodesL a form:Listing;
  form:each ext:formNodesFormItem;
  form:scope ext:subformNodesLS;
  form:createGenerator ext:formNodesGenerator;
  form:canAdd false;
  form:canRemove false;
  sh:group ext:listingPg;
  sh:order 60 .
